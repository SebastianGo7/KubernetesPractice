# Statefulset part 1

# Clone git repository, there is an statefulset example
git clone https://github.com/rskTech/k8s_material.git
cd k8s_material/statefulset/


# sfs.yaml file 
vim sfs.yaml
# inside
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi

# Command returns there are no resources found in default namespace
k get sts

# Create a storage class
vim sc.yaml
# inside
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "my-storage-class"
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

# Create Storage class
k apply -f sc.yaml
k get sc

# Create statefulset
k apply -f sfs.yaml
k get sts
k get po
k get pvc
k get pv

# Persistent Volume Yaml File
vim pv.yaml
# inside
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mypv
spec:
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: "my-storage-class"
  local:
    path: /opt
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - worker1

# no PV therefore pvc is in pending state
k get pv
k get pvc

# Create pv
k apply -f pv.yaml

